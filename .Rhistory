setwd("~/Janne/Open Data Science/R-directory")
source('~/Documents/GitHub/IODS-project/data/create_learning2014.R')
source('~/Documents/GitHub/IODS-project/data/create_learning2014.R')
lrn14 <- read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt", sep="\t", header=TRUE)
dim(lrn14)
str(lrn14)
View(lrn14)
levels(lrn14)
summary(lrn14)
colnames(lrn14)
?subset
surf <-  subset(lrn14, su_lp + su_um + su_sb)
library(dplyr)
install.packages("dplyr")
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library(dplyr)
colnames(lrn14)
# questions related to deep, surface and strategic learning
deep_questions <- c("D03", "D11", "D19", "D27", "D07", "D14", "D22", "D30","D06",  "D15", "D23", "D31")
surface_questions <- c("SU02","SU10","SU18","SU26", "SU05","SU13","SU21","SU29","SU08","SU16","SU24","SU32")
strategic_questions <- c("ST01","ST09","ST17","ST25","ST04","ST12","ST20","ST28")
# select the columns related to deep learning and create column 'deep' by averaging
deep_columns <- select(lrn14, one_of(deep_questions))
lrn14$deep <- rowMeans(deep_columns)
# select the columns related to surface learning and create column 'surf' by averaging
surface_columns <- select(lrn14, one_of(surface_questions))
lrn14$surf <- rowMeans(surface_columns)
# select the columns related to strategic learning and create column 'stra' by averaging
strategic_columns <- select(lrn14, one_of(strategic_questions))
lrn14$stra <- rowMeans(strategic_columns)
View(lrn14)
colnames(lrn14)
View(lrn14)
keep_columns <- c("gender","Age","attitude", "deep", "stra", "surf", "Points")
# select the 'keep_columns' to create a new dataset
learning2014 <- select(lrn14, one_of(keep_columns))
colnames(learning2014)[2] <- "age"
# change the name of "Points" to "points"
colnames(learning2014)[7] <- "points"
colnames(learning2014)
lrn14 <- read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt", sep="\t", header=TRUE)
deep_questions <- c("D03", "D11", "D19", "D27", "D07", "D14", "D22", "D30","D06",  "D15", "D23", "D31")
surface_questions <- c("SU02","SU10","SU18","SU26", "SU05","SU13","SU21","SU29","SU08","SU16","SU24","SU32")
strategic_questions <- c("ST01","ST09","ST17","ST25","ST04","ST12","ST20","ST28")
# select the columns related to deep learning and create column 'deep' by averaging
deep_columns <- select(lrn14, one_of(deep_questions))
lrn14$deep <- rowMeans(deep_columns)
# select the columns related to surface learning and create column 'surf' by averaging
surface_columns <- select(lrn14, one_of(surface_questions))
lrn14$surf <- rowMeans(surface_columns)
# select the columns related to strategic learning and create column 'stra' by averaging
strategic_columns <- select(lrn14, one_of(strategic_questions))
lrn14$stra <- rowMeans(strategic_columns)
lrn14$attitude <- lrn14$Attitude / 10
deep_questions <- c("D03", "D11", "D19", "D27", "D07", "D14", "D22", "D30","D06",  "D15", "D23", "D31")
surface_questions <- c("SU02","SU10","SU18","SU26", "SU05","SU13","SU21","SU29","SU08","SU16","SU24","SU32")
strategic_questions <- c("ST01","ST09","ST17","ST25","ST04","ST12","ST20","ST28")
deep_columns <- select(lrn14, one_of(deep_questions))
lrn14$deep <- rowMeans(deep_columns)
# select the columns related to surface learning and create column 'surf' by averaging
surface_columns <- select(lrn14, one_of(surface_questions))
lrn14$surf <- rowMeans(surface_columns)
# select the columns related to strategic learning and create column 'stra' by averaging
strategic_columns <- select(lrn14, one_of(strategic_questions))
lrn14$stra <- rowMeans(strategic_columns)
keep_columns <- c("gender","Age","attitude", "deep", "stra", "surf", "Points")
# select the 'keep_columns' to create a new dataset
learning2014 <- select(lrn14, one_of(keep_columns))
### Rename columns
colnames(learning2014)[2] <- "age"
# change the name of "Points" to "points"
colnames(learning2014)[7] <- "points"
# print out the new column names of the data
colnames(learning2014)
View(learning2014)
learning2014 <- filter(learning2014, points > 0)
summary(learning2014)
min(learning2014$points)
summary(learning2014)
setwd("~/Documents/GitHub/IODS-project")
View(learning2014)
?write.csv
View(learning2014)
write.csv(learning2014,"~/Documents/GitHub/IODS-project/data/learning2014.csv")
?read.csv
learning2014_test <- read_csv("data/learning2014.csv")
View(learning2014_test)
learning2014_test <- read_csv("~/Documents/GitHub/IODS-project/data/learning2014.csv")
View(learning2014_test)
learning2014_test <- read_csv(/data/learning2014.csv)
learning2014_test <- read_csv(data/learning2014.csv)
learning2014_test <- read.csv(data/learning2014.csv)
View(learning2014_test)
learning2014_test <- read.csv("data/learning2014.csv")
head((learning2014_test))
head(learning2014)
write.csv(learning2014,"~/Documents/GitHub/IODS-project/data/learning2014.csv", row.names=FALSE)
learning2014_test <- read.csv("data/learning2014.csv")
View(learning2014_test)
head(learning2014_test)
head(learning2014)
str(learning2014)
str(learning2014_test)
?identical
indentical(learning2014,learning2014_test)
identical(learning2014,learning2014_test)
all.equal(learning2014,learning2014_test)
rm(deep_columns, learning2014_test, strategic_columns, surface_columns, deep_questions, keep_columns, strategic_questions, surface_questions)
